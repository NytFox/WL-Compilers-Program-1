<<<<<<< HEAD
%{
extern "C"
{
	int yylex(void);
	int yyparse(void);
}
#include "symtab_class_header.h"
#include <ctype.h>
//original
char *start_expression_string(Symbol *symbol);
void generate_exp(Symbol *symbol,const char *rhs);
int yyerror(const char *s);
void generate_copy(Symbol* symbol,int value);
char *new_registrator();
void function_call(Symbol *func, Symbol *para);
char *Calc_exponential(const char *r1,const char *r2);
int assign_next_lable();
char *get_number(int num);
bool is_number(const char *string);
void cal_operation(char oprator,const char *left, const char *right,const char *target);
extern int assign_next_register();
%}

%union 
{
        int intstuff;
        const char *stringstuff;
        Symbol* symbolstuff;  
}


%token MAIN
%token BEGIN_E
%token END_E
%token EXPO
%token INT
%token CHAR
%token LONG
%token ENUM
%token VOID
%token DO
%token IF
%token ELSE
%token CONTINUE


%token <stringstuff> AND
%token <stringstuff> OR
%token <stringstuff> LT
%token <stringstuff> GT
%token <stringstuff> EQ
%token <stringstuff> NEQ
%token <stringstuff> LE
%token <stringstuff> GE
%token <stringstuff> LEFT_SHIFT
%token <stringstuff> RIGHT_SHIFT
%token <intstuff> INTLITERAL
%token <symbolstuff> ID

%type <stringstuff> factor 
%type <stringstuff> term
%type <stringstuff> Expression 
%type <stringstuff> statement
%type <stringstuff> parentheses
%type <stringstuff> declaration
%type <stringstuff> declaration_item
%type <stringstuff> arraycontent
%type <stringstuff> if_content
%type <stringstuff> comparison
%type <stringstuff> do_loop_statement
%type <stringstuff> do_begin
%type <stringstuff> do_end
%type <stringstuff> if_statement
%type <stringstuff> Program
%type <stringstuff> FuncList
%type <stringstuff> Function
%type <stringstuff> sBlock
%type <stringstuff> Parameter_list
%type <symbolstuff> call_id
%type <stringstuff> Expression_list
%type <stringstuff> ShiftTerm
%type <stringstuff> BitTerm
%type <stringstuff> Shift_operation
%type <stringstuff> bit_operation
