%{
extern "C"
{
	int yylex(void);
	int yyparse(void);
}
#include "symtab_class_header.h"
#include <ctype.h>
//original
char *start_expression_string(Symbol *symbol);
void generate_exp(Symbol *symbol,const char *rhs);
int yyerror(const char *s);
void generate_copy(Symbol* symbol,int value);
char *new_registrator();
void function_call(Symbol *func, Symbol *para);
char *Calc_exponential(const char *r1,const char *r2);
int assign_next_lable();
char *get_number(int num);
bool is_number(const char *string);
void cal_operation(char oprator,const char *left, const char *right);
extern int assign_next_register();
%}

%union 
{
        int intstuff;
        const char *stringstuff;
        Symbol* symbolstuff;  
}

%token BEGIN_E
%token END_E
%token ASG 
%token EXPO
%token <intstuff> INTLITERAL
%token <symbolstuff> ID

%type <stringstuff> factor 
%type <stringstuff> term
%type <stringstuff> expression 
%type <stringstuff> statement
%type <stringstuff> parentheses

